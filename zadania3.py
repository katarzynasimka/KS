# -*- coding: utf-8 -*-
"""Zadania3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OVh1kPr_mTGiJnhb6sxOb1kqwpARrgMV
"""


class Student:
    def __init__(self, name, marks):
        self.name = name
        self.marks = marks

    def is_passed(self):
        return sum(self.marks) / len(self.marks) > 50


class Library:
    def __init__(self, city, street, zip_code, open_hours, phone):
        self.city = city
        self.street = street
        self.zip_code = zip_code
        self.open_hours = open_hours
        self.phone = phone

    def __str__(self):
        return (f"Biblioteka: {self.city}, {self.street}, {self.zip_code}, "
                f"Godziny otwarcia: {self.open_hours}, Telefon: {self.phone}")


class Employee:
    def __init__(self, first_name, last_name, hire_date,
                 birth_date, city, street, zip_code, phone):
        self.first_name = first_name
        self.last_name = last_name
        self.hire_date = hire_date
        self.birth_date = birth_date
        self.city = city
        self.street = street
        self.zip_code = zip_code
        self.phone = phone

    @property
    def __str__(self):
        return (f"Pracownik: {self.first_name} {self.last_name}, "
                f"Data zatrudnienia: {self.hire_date}, "
                f"Data urodzenia: {self.birth_date}, "
                f"Adres: {self.city}, {self.street}, {self.zip_code}, "
                f"Telefon: {self.phone}")


class Book:
    def __init__(self, library, publication_date, author_name,
                 author_surname, number_of_pages):
        self.library = library
        self.publication_date = publication_date
        self.author_name = author_name
        self.author_surname = author_surname
        self.number_of_pages = number_of_pages

    def __str__(self):
        return (f"Książka: {self.author_name} "
                f"{self.author_surname}, "
                f"Data publikacji: {self.publication_date}, "
                f"Liczba stron: {self.number_of_pages}, "
                f"Biblioteka: {self.library}")


class Order:
    def __init__(self, employee, student, books, order_date):
        self.employee = employee
        self.student = student
        self.books = books
        self.order_date = order_date

    def __str__(self):
        books_str = ', '.join(str(book) for book in self.books)
        return (f"Zamówienie: Pracownik: {self.employee}, "
                f"Student: {self.student}, "
                f"Książki: {books_str}, Data zamówienia: {self.order_date}")


class Property:
    def __init__(self, area, rooms, price, address):
        self.area = area
        self.rooms = rooms
        self.price = price
        self.address = address

    def __str__(self):
        return (f"Nieruchomość: Powierzchnia: {self.area}, "
                f"Pokoje: {self.rooms}, "
                f"Cena: {self.price}, Adres: {self.address}")


class House(Property):
    def __init__(self, area, rooms, price, address, plot):
        super().__init__(area, rooms, price, address)
        self.plot = plot

    def __str__(self):
        return (f"Dom: {super().__str__()}, Rozmiar działki: {self.plot}")


class Flat(Property):
    def __init__(self, area, rooms, price, address, floor):
        super().__init__(area, rooms, price, address)
        self.floor = floor

    def __str__(self):
        return (f"Mieszkanie: {super().__str__()}, Piętro: {self.floor}")
